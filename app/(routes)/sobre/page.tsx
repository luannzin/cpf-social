import Link from "next/link";

const Page = () => {
  return (
    <main className="flex flex-col gap-4 py-16">
      <u>
        <Link href={"/"}>Gerador de cpf</Link>
      </u>
      <h1 className="text-2xl text-center">
        <strong>A MatemÃ¡tica do CPF.</strong>
      </h1>
      <div className="flex flex-col gap-2">
        <p>
          A MatemÃ¡tica estÃ¡ presente em vÃ¡rias coisas naturais para o nosso
          dia-a-dia.
        </p>
        <p>
          Hoje eu vou explicar como funciona a geraÃ§Ã£o e validaÃ§Ã£o de um CPF.
        </p>
      </div>
      <h2 className="text-2xl">
        <strong>FÃ³rmula</strong>
      </h2>
      <img
        width={600}
        src="https://miro.medium.com/v2/resize:fit:4800/format:webp/1*--7XE1QgT7KIiBW03toQnQ.png"
        alt=""
      />
      <p>
        Os <strong>primeiros oito dÃ­gitos</strong>, sÃ£o os nÃºmeros base do CPF,
        que sÃ£o definidos pela Receita Federal.
      </p>
      <p>
        O <strong>nono dÃ­gito</strong>, define a RegiÃ£o Fiscal responsÃ¡vel pela
        inscriÃ§Ã£o.
      </p>
      <p>
        O <strong>penÃºltimo</strong>,Ã© o dÃ­gito verificador dos nove primeiros.
      </p>
      <p>
        O <strong>Ãºltimo</strong>, Ã© o dÃ­gito verificador dos noves anteriores a
        ele.
      </p>
      <h2 className="text-2xl">
        <strong>Simplificando</strong>
      </h2>
      <p>
        Os 8 primeiros nÃºmeros podem ser aleatÃ³rios (123.456.78x-xx ou
        000.000.00x-xx), o que realmente importa sÃ£o os prÃ³ximos 3.
      </p>
      <h3>
        <strong>Nono Digito</strong>
      </h3>
      <strong>1 â€” DF, GO, MS, MT e TO</strong>
      <strong>2 â€” AC, AM, AP, PA, RO e RR</strong>
      <strong>3 â€” CE, MA e PI</strong>
      <strong>4 â€” AL, PB, PE, RN</strong>
      <strong>5 â€” BA e SE</strong>
      <strong>6 â€” MG</strong>
      <strong>7 â€” ES e RJ</strong>
      <strong>8 â€” SP</strong>
      <strong>9 â€” PR e SC</strong>
      <strong>0 â€” RS</strong>
      <p>
        Segundo essa tabela, o seu nono digito indica qual{" "}
        <strong>RegiÃ£o Fiscal</strong> Ã© responsÃ¡vel por ele. (Faz o teste com o
        seu CPF. ğŸ˜‰)
      </p>
      <h3>
        <strong>DÃ©cimo Digito</strong>
      </h3>
      <p>Esse Ã© o nosso primeiro verificador, e ele usa a seguinte fÃ³rmula:</p>
      <p>
        Os nove primeiros nÃºmeros sÃ£o ordenadamente multiplicados pela sequÃªncia
        <strong>10, 9, 8, 7, 6, 5, 4, 3, 2</strong> (o primeiro por 10, o
        segundo por 9, e assim sucessivamente))
      </p>
      <p>
        Em seguida, vocÃª soma os resultados e calcula o resto da divisÃ£o dessa
        soma por 11.
      </p>
      <p>Ex:</p>
      <p>Imagine que a soma total foi 162.</p>
      <strong>162 % 11 = 8</strong>
      <p>O resto da divisÃ£o.</p>
      <p>
        Se esse resto for <strong>0 ou 1</strong>, entÃ£o o digito deve ser{" "}
        <strong>0</strong>.
      </p>
      <p>
        Caso contrÃ¡rio, o digito Ã© <strong>(11 â€” resto)</strong>.
      </p>
      <p>Ex:</p>
      <strong>11â€“8 = 3</strong>
      <p>
        O nosso dÃ©cimo digito, seria <strong>3</strong>.
      </p>
      <h3>
        <strong>DÃ©cimo Primeiro Digito</strong>
      </h3>
      <p>
        Para esse Digito, a fÃ³rmula funciona da mesma maneira, mas ele usa os 9
        nÃºmeros antes dele.
      </p>
      <p>
        Ou seja, agora o nosso primeiro digito verificador tambÃ©m entra nessa
        conta.
      </p>
      <p>
        E com isso, mesmo com apenas uma caneta e um pedaÃ§o de papel, vocÃª jÃ¡
        consegue gerar CPFs vÃ¡lidos manualmente.
      </p>
      <h3>AutomatizaÃ§Ã£o</h3>
      <p>
        E para testar essa lÃ³gica e as fÃ³rmulas, eu fiz um gerador de CPF
        extremamente simples.
      </p>
      <p>
        ğŸ‘‰
        <Link className="text-orange-700 underline" href="/">
          https://cpf.social/
        </Link>
        ğŸ‘ˆ
      </p>
      <p>Aqui estÃ¡ o repositÃ³rio:</p>
      <p>
        ğŸ‘‰
        <Link
          className="text-orange-700 underline"
          href="https://github.com/luannzin/cpf-social"
        >
          https://github.com/luannzin/cpf-social
        </Link>
        ğŸ‘ˆ
      </p>
      <p>E aqui estÃ¡ o algoritmo de geraÃ§Ã£o:</p>
      <p>
        ğŸ‘‰
        <Link
          className="text-orange-700 underline"
          href="https://github.com/luannzin/cpf-social/blob/main/app/helpers/generateCpf.ts"
        >
          https://github.com/luannzin/cpf-social/blob/main/app/helpers/generateCpf.ts
        </Link>
        ğŸ‘ˆ
      </p>
      <p>
        O projeto Ã© um MVP e Open Source, entÃ£o qualquer ideia Ã© extremamente
        bem-vinda.
      </p>
      <p>
        Farei um post sobre o Algoritmo de Luhn, entÃ£o fiquem preparados. ğŸ‘‘
      </p>
      <p>Siga meu Github para os meus prÃ³ximos projetos.</p>
      <p>
        ğŸ‘‰
        <Link
          className="text-orange-700 underline"
          href="https://github.com/luannzin "
        >
          https://github.com/luannzin
        </Link>
        ğŸ‘ˆ
      </p>
      <u className="mt-16">
        <Link href={"/"}>Gerador de CPF Valido</Link>
      </u>
    </main>
  );
};

export default Page;
